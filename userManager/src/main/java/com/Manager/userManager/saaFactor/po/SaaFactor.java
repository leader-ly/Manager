package com.Manager.userManager.saaFactor.po;

import lombok.Data;

import java.io.Serializable;
import java.util.Date;
@Data
public class SaaFactor implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column saa_factor.factor_code
     *
     * @mbggenerated
     */
    private String factorCode;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column saa_factor.factor_desc
     *
     * @mbggenerated
     */
    private String factorDesc;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column saa_factor.data_type
     *
     * @mbggenerated
     */
    private String dataType;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column saa_factor.version
     *
     * @mbggenerated
     */
    private Integer version;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column saa_factor.insert_time_for_his
     *
     * @mbggenerated
     */
    private Date insertTimeForHis;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column saa_factor.operate_time_for_his
     *
     * @mbggenerated
     */
    private Date operateTimeForHis;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table saa_factor
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column saa_factor.factor_code
     *
     * @return the value of saa_factor.factor_code
     *
     * @mbggenerated
     */
    public String getFactorCode() {
        return factorCode;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column saa_factor.factor_code
     *
     * @param factorCode the value for saa_factor.factor_code
     *
     * @mbggenerated
     */
    public void setFactorCode(String factorCode) {
        this.factorCode = factorCode == null ? null : factorCode.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column saa_factor.factor_desc
     *
     * @return the value of saa_factor.factor_desc
     *
     * @mbggenerated
     */
    public String getFactorDesc() {
        return factorDesc;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column saa_factor.factor_desc
     *
     * @param factorDesc the value for saa_factor.factor_desc
     *
     * @mbggenerated
     */
    public void setFactorDesc(String factorDesc) {
        this.factorDesc = factorDesc == null ? null : factorDesc.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column saa_factor.data_type
     *
     * @return the value of saa_factor.data_type
     *
     * @mbggenerated
     */
    public String getDataType() {
        return dataType;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column saa_factor.data_type
     *
     * @param dataType the value for saa_factor.data_type
     *
     * @mbggenerated
     */
    public void setDataType(String dataType) {
        this.dataType = dataType == null ? null : dataType.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column saa_factor.version
     *
     * @return the value of saa_factor.version
     *
     * @mbggenerated
     */
    public Integer getVersion() {
        return version;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column saa_factor.version
     *
     * @param version the value for saa_factor.version
     *
     * @mbggenerated
     */
    public void setVersion(Integer version) {
        this.version = version;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column saa_factor.insert_time_for_his
     *
     * @return the value of saa_factor.insert_time_for_his
     *
     * @mbggenerated
     */
    public Date getInsertTimeForHis() {
        return insertTimeForHis;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column saa_factor.insert_time_for_his
     *
     * @param insertTimeForHis the value for saa_factor.insert_time_for_his
     *
     * @mbggenerated
     */
    public void setInsertTimeForHis(Date insertTimeForHis) {
        this.insertTimeForHis = insertTimeForHis;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column saa_factor.operate_time_for_his
     *
     * @return the value of saa_factor.operate_time_for_his
     *
     * @mbggenerated
     */
    public Date getOperateTimeForHis() {
        return operateTimeForHis;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column saa_factor.operate_time_for_his
     *
     * @param operateTimeForHis the value for saa_factor.operate_time_for_his
     *
     * @mbggenerated
     */
    public void setOperateTimeForHis(Date operateTimeForHis) {
        this.operateTimeForHis = operateTimeForHis;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table saa_factor
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", factorCode=").append(factorCode);
        sb.append(", factorDesc=").append(factorDesc);
        sb.append(", dataType=").append(dataType);
        sb.append(", version=").append(version);
        sb.append(", insertTimeForHis=").append(insertTimeForHis);
        sb.append(", operateTimeForHis=").append(operateTimeForHis);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}